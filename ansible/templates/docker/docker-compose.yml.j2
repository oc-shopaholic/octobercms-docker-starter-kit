version: '3.9'
services:
    nginx:
        image: nginx:1.21.1-alpine
        restart: unless-stopped
        ports:
            - '${APP_PORT:-80}:80'
        volumes:
            - ./docker/nginx/domain.conf:/etc/nginx/conf.d/default.conf:ro
            - ./docker/nginx/snippets:/etc/nginx/snippets/:ro
            - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}:ro
        networks:
            - sail
        depends_on:
            - backend
    backend:
        restart: unless-stopped
        build:
            context: .
            dockerfile: docker/services/php/${PHP_VERSION}/Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                WWWUSER: '${WWWUSER}'
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        image: l/php:${PHP_VERSION}
        environment:
            APP_ENV: "${APP_ENV:-local}"
            COMPOSE_INTERACTIVE_NO_CLI: 1
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}'
        networks:
            - sail
        depends_on:
{% if ENABLE_REDIS %}
            redis:
                condition: service_healthy
{% endif %}
{%if DATABASE_TYPE == 'mysql' %}
            mysql:
                condition: service_healthy
{% endif %}
{%if DATABASE_TYPE == 'postgres' %}
            pgsql:
                condition: service_healthy
{% endif %}
    schedule:
        restart: unless-stopped
        image: l/php:${PHP_VERSION}
        environment:
            CONTAINER_ROLE: scheduler
            COMPOSE_INTERACTIVE_NO_CLI: 1
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}'
        networks:
            - sail
        depends_on:
            - backend
{% if ENABLE_QUEUE %}
    queue:
        restart: unless-stopped
        image: l/php:${PHP_VERSION}
        deploy:
            mode: replicated
            replicas: 4
        environment:
            CONTAINER_ROLE: queue
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
        volumes:
            - '${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}'
        networks:
            - sail
        depends_on:
            - backend
{% endif %}
{%if DATABASE_TYPE == 'postgres' %}
    pgsql:
        restart: unless-stopped
        image: postgres:15
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'sailpgsql:/var/lib/postgresql/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"]
            retries: 3
            timeout: 5s
{% endif %}
{%if DATABASE_TYPE == 'mysql' %}
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sailmysql:/var/lib/mysql'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s
{% endif %}
{% if ENABLE_REDIS %}
    redis:
        restart: unless-stopped
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sailredis:/data'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s
{% endif %}
{% if ENABLE_MAILHOG %}
    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - sail
{% endif %}
networks:
    sail:
        driver: bridge
volumes:
{%if DATABASE_TYPE == 'mysql' %}
    sailmysql:
        driver: local
{% endif %}
{%if DATABASE_TYPE == 'postgres' %}
    sailpgsql:
        driver: local
{% endif %}
{% if ENABLE_REDIS %}
    sailredis:
        driver: local
{% endif %}
